{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.api.Project",
            "member": "Method java.io.File org.gradle.api.Project.getBuildFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method java.util.List org.gradle.api.Project.getDefaultTasks()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method void org.gradle.api.Project.setDefaultTasks(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method java.lang.Object org.gradle.api.Project.getGroup()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method void org.gradle.api.Project.setGroup(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method java.util.Map org.gradle.api.Project.getProperties()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method void org.gradle.api.Project.setStatus(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method java.lang.Object org.gradle.api.Project.getStatus()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method void org.gradle.api.Project.setVersion(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method java.lang.Object org.gradle.api.Project.getVersion()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.FlatDirectoryArtifactRepository",
            "member": "Method java.util.Set org.gradle.api.artifacts.repositories.FlatDirectoryArtifactRepository.getDirs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.FlatDirectoryArtifactRepository",
            "member": "Method void org.gradle.api.artifacts.repositories.FlatDirectoryArtifactRepository.setDirs(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.FlatDirectoryArtifactRepository",
            "member": "Method void org.gradle.api.artifacts.repositories.FlatDirectoryArtifactRepository.setDirs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.IvyArtifactRepository",
            "member": "Method org.gradle.api.artifacts.repositories.IvyArtifactRepository$MetadataSources org.gradle.api.artifacts.repositories.IvyArtifactRepository.getMetadataSources()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.IvyArtifactRepository",
            "member": "Method org.gradle.api.artifacts.repositories.IvyArtifactRepositoryMetaDataProvider org.gradle.api.artifacts.repositories.IvyArtifactRepository.getResolve()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.IvyArtifactRepository",
            "member": "Method java.net.URI org.gradle.api.artifacts.repositories.IvyArtifactRepository.getUrl()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.IvyArtifactRepository",
            "member": "Method void org.gradle.api.artifacts.repositories.IvyArtifactRepository.setUrl(java.net.URI)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.IvyArtifactRepository",
            "member": "Method void org.gradle.api.artifacts.repositories.IvyArtifactRepository.setUrl(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.IvyArtifactRepositoryMetaDataProvider",
            "member": "Method boolean org.gradle.api.artifacts.repositories.IvyArtifactRepositoryMetaDataProvider.isDynamicMode()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.IvyArtifactRepositoryMetaDataProvider",
            "member": "Method void org.gradle.api.artifacts.repositories.IvyArtifactRepositoryMetaDataProvider.setDynamicMode(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.MavenArtifactRepository",
            "member": "Method java.util.Set org.gradle.api.artifacts.repositories.MavenArtifactRepository.getArtifactUrls()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.MavenArtifactRepository",
            "member": "Method void org.gradle.api.artifacts.repositories.MavenArtifactRepository.setArtifactUrls(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.MavenArtifactRepository",
            "member": "Method void org.gradle.api.artifacts.repositories.MavenArtifactRepository.setArtifactUrls(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.MavenArtifactRepository",
            "member": "Method org.gradle.api.artifacts.repositories.MavenArtifactRepository$MetadataSources org.gradle.api.artifacts.repositories.MavenArtifactRepository.getMetadataSources()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.MavenArtifactRepository",
            "member": "Method java.net.URI org.gradle.api.artifacts.repositories.MavenArtifactRepository.getUrl()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.MavenArtifactRepository",
            "member": "Method void org.gradle.api.artifacts.repositories.MavenArtifactRepository.setUrl(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.MavenArtifactRepository",
            "member": "Method void org.gradle.api.artifacts.repositories.MavenArtifactRepository.setUrl(java.net.URI)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.UrlArtifactRepository",
            "member": "Method java.net.URI org.gradle.api.artifacts.repositories.UrlArtifactRepository.getUrl()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.UrlArtifactRepository",
            "member": "Method void org.gradle.api.artifacts.repositories.UrlArtifactRepository.setUrl(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.UrlArtifactRepository",
            "member": "Method void org.gradle.api.artifacts.repositories.UrlArtifactRepository.setUrl(java.net.URI)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.UrlArtifactRepository",
            "member": "Method boolean org.gradle.api.artifacts.repositories.UrlArtifactRepository.isAllowInsecureProtocol()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.UrlArtifactRepository",
            "member": "Method void org.gradle.api.artifacts.repositories.UrlArtifactRepository.setAllowInsecureProtocol(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.ConfigurableFileTree",
            "member": "Method java.io.File org.gradle.api.file.ConfigurableFileTree.getDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.ConfigurableFileTree",
            "member": "Method org.gradle.api.file.ConfigurableFileTree org.gradle.api.file.ConfigurableFileTree.setDir(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopyProcessingSpec",
            "member": "Method java.lang.Integer org.gradle.api.file.CopyProcessingSpec.getDirMode()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopyProcessingSpec",
            "member": "Method org.gradle.api.file.CopyProcessingSpec org.gradle.api.file.CopyProcessingSpec.setDirMode(java.lang.Integer)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopyProcessingSpec",
            "member": "Method java.lang.Integer org.gradle.api.file.CopyProcessingSpec.getFileMode()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopyProcessingSpec",
            "member": "Method org.gradle.api.file.CopyProcessingSpec org.gradle.api.file.CopyProcessingSpec.setFileMode(java.lang.Integer)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopySpec",
            "member": "Method void org.gradle.api.file.CopySpec.setDuplicatesStrategy(org.gradle.api.file.DuplicatesStrategy)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopySpec",
            "member": "Method org.gradle.api.file.DuplicatesStrategy org.gradle.api.file.CopySpec.getDuplicatesStrategy()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopySpec",
            "member": "Method java.lang.String org.gradle.api.file.CopySpec.getFilteringCharset()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopySpec",
            "member": "Method void org.gradle.api.file.CopySpec.setFilteringCharset(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopySpec",
            "member": "Method boolean org.gradle.api.file.CopySpec.getIncludeEmptyDirs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopySpec",
            "member": "Method void org.gradle.api.file.CopySpec.setIncludeEmptyDirs(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopySpec",
            "member": "Method void org.gradle.api.file.CopySpec.setCaseSensitive(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.CopySpec",
            "member": "Method boolean org.gradle.api.file.CopySpec.isCaseSensitive()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.DeleteSpec",
            "member": "Method void org.gradle.api.file.DeleteSpec.setFollowSymlinks(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.SourceDirectorySet",
            "member": "Method java.util.Set org.gradle.api.file.SourceDirectorySet.getSrcDirs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.file.SourceDirectorySet",
            "member": "Method org.gradle.api.file.SourceDirectorySet org.gradle.api.file.SourceDirectorySet.setSrcDirs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaApplication",
            "member": "Method void org.gradle.api.plugins.JavaApplication.setApplicationDefaultJvmArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaApplication",
            "member": "Method java.lang.Iterable org.gradle.api.plugins.JavaApplication.getApplicationDefaultJvmArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaApplication",
            "member": "Method void org.gradle.api.plugins.JavaApplication.setApplicationDistribution(org.gradle.api.file.CopySpec)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaApplication",
            "member": "Method org.gradle.api.file.CopySpec org.gradle.api.plugins.JavaApplication.getApplicationDistribution()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaApplication",
            "member": "Method void org.gradle.api.plugins.JavaApplication.setApplicationName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaApplication",
            "member": "Method java.lang.String org.gradle.api.plugins.JavaApplication.getApplicationName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaApplication",
            "member": "Method void org.gradle.api.plugins.JavaApplication.setExecutableDir(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaApplication",
            "member": "Method java.lang.String org.gradle.api.plugins.JavaApplication.getExecutableDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginExtension",
            "member": "Method boolean org.gradle.api.plugins.JavaPluginExtension.getAutoTargetJvmDisabled()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginExtension",
            "member": "Method org.gradle.api.JavaVersion org.gradle.api.plugins.JavaPluginExtension.getSourceCompatibility()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginExtension",
            "member": "Method void org.gradle.api.plugins.JavaPluginExtension.setSourceCompatibility(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginExtension",
            "member": "Method void org.gradle.api.plugins.JavaPluginExtension.setSourceCompatibility(org.gradle.api.JavaVersion)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginExtension",
            "member": "Method void org.gradle.api.plugins.JavaPluginExtension.setTargetCompatibility(org.gradle.api.JavaVersion)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginExtension",
            "member": "Method void org.gradle.api.plugins.JavaPluginExtension.setTargetCompatibility(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginExtension",
            "member": "Method org.gradle.api.JavaVersion org.gradle.api.plugins.JavaPluginExtension.getTargetCompatibility()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.plugins.antlr.AntlrTask.getAntlrClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method void org.gradle.api.plugins.antlr.AntlrTask.setArguments(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method java.util.List org.gradle.api.plugins.antlr.AntlrTask.getArguments()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method java.lang.String org.gradle.api.plugins.antlr.AntlrTask.getMaxHeapSize()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method void org.gradle.api.plugins.antlr.AntlrTask.setMaxHeapSize(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method java.io.File org.gradle.api.plugins.antlr.AntlrTask.getOutputDirectory()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method void org.gradle.api.plugins.antlr.AntlrTask.setOutputDirectory(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.file.FileTree org.gradle.api.plugins.antlr.AntlrTask.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method void org.gradle.api.plugins.antlr.AntlrTask.setSource(org.gradle.api.file.FileTree)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method void org.gradle.api.plugins.antlr.AntlrTask.setSource(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method void org.gradle.api.plugins.antlr.AntlrTask.setTrace(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method boolean org.gradle.api.plugins.antlr.AntlrTask.isTrace()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method boolean org.gradle.api.plugins.antlr.AntlrTask.isTraceLexer()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method void org.gradle.api.plugins.antlr.AntlrTask.setTraceLexer(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method boolean org.gradle.api.plugins.antlr.AntlrTask.isTraceParser()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method void org.gradle.api.plugins.antlr.AntlrTask.setTraceParser(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method boolean org.gradle.api.plugins.antlr.AntlrTask.isTraceTreeWalker()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method void org.gradle.api.plugins.antlr.AntlrTask.setTraceTreeWalker(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.plugins.quality.Checkstyle.getCheckstyleClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method void org.gradle.api.plugins.quality.Checkstyle.setCheckstyleClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.plugins.quality.Checkstyle.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method void org.gradle.api.plugins.quality.Checkstyle.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method void org.gradle.api.plugins.quality.Checkstyle.setConfig(org.gradle.api.resources.TextResource)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method org.gradle.api.resources.TextResource org.gradle.api.plugins.quality.Checkstyle.getConfig()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method java.util.Map org.gradle.api.plugins.quality.Checkstyle.getConfigProperties()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method void org.gradle.api.plugins.quality.Checkstyle.setConfigProperties(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method int org.gradle.api.plugins.quality.Checkstyle.getMaxErrors()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method void org.gradle.api.plugins.quality.Checkstyle.setMaxErrors(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method int org.gradle.api.plugins.quality.Checkstyle.getMaxWarnings()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method void org.gradle.api.plugins.quality.Checkstyle.setMaxWarnings(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method org.gradle.api.file.FileTree org.gradle.api.plugins.quality.Checkstyle.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceTask",
            "member": "Method void org.gradle.api.tasks.SourceTask.setSource(org.gradle.api.file.FileTree)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceTask",
            "member": "Method void org.gradle.api.tasks.SourceTask.setSource(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method boolean org.gradle.api.plugins.quality.Checkstyle.isShowViolations()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method void org.gradle.api.plugins.quality.Checkstyle.setShowViolations(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method boolean org.gradle.api.plugins.quality.Checkstyle.getShowViolations()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method java.io.File org.gradle.api.plugins.quality.CheckstyleExtension.getConfigFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method void org.gradle.api.plugins.quality.CheckstyleExtension.setConfigFile(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method java.util.Map org.gradle.api.plugins.quality.CheckstyleExtension.getConfigProperties()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method void org.gradle.api.plugins.quality.CheckstyleExtension.setConfigProperties(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method int org.gradle.api.plugins.quality.CheckstyleExtension.getMaxErrors()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method void org.gradle.api.plugins.quality.CheckstyleExtension.setMaxErrors(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method int org.gradle.api.plugins.quality.CheckstyleExtension.getMaxWarnings()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method void org.gradle.api.plugins.quality.CheckstyleExtension.setMaxWarnings(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method boolean org.gradle.api.plugins.quality.CheckstyleExtension.isShowViolations()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method void org.gradle.api.plugins.quality.CheckstyleExtension.setShowViolations(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method boolean org.gradle.api.plugins.quality.CheckstyleExtension.getShowViolations()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.plugins.quality.CodeNarc.getCodenarcClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method void org.gradle.api.plugins.quality.CodeNarc.setCodenarcClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.plugins.quality.CodeNarc.getCompilationClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method void org.gradle.api.plugins.quality.CodeNarc.setCompilationClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method void org.gradle.api.plugins.quality.CodeNarc.setConfig(org.gradle.api.resources.TextResource)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method org.gradle.api.resources.TextResource org.gradle.api.plugins.quality.CodeNarc.getConfig()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method int org.gradle.api.plugins.quality.CodeNarc.getMaxPriority1Violations()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method void org.gradle.api.plugins.quality.CodeNarc.setMaxPriority1Violations(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method int org.gradle.api.plugins.quality.CodeNarc.getMaxPriority2Violations()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method void org.gradle.api.plugins.quality.CodeNarc.setMaxPriority2Violations(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method int org.gradle.api.plugins.quality.CodeNarc.getMaxPriority3Violations()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method void org.gradle.api.plugins.quality.CodeNarc.setMaxPriority3Violations(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarc",
            "member": "Method org.gradle.api.file.FileTree org.gradle.api.plugins.quality.CodeNarc.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarcExtension",
            "member": "Method java.io.File org.gradle.api.plugins.quality.CodeNarcExtension.getConfigFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarcExtension",
            "member": "Method void org.gradle.api.plugins.quality.CodeNarcExtension.setConfigFile(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarcExtension",
            "member": "Method int org.gradle.api.plugins.quality.CodeNarcExtension.getMaxPriority1Violations()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarcExtension",
            "member": "Method void org.gradle.api.plugins.quality.CodeNarcExtension.setMaxPriority1Violations(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarcExtension",
            "member": "Method int org.gradle.api.plugins.quality.CodeNarcExtension.getMaxPriority2Violations()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarcExtension",
            "member": "Method void org.gradle.api.plugins.quality.CodeNarcExtension.setMaxPriority2Violations(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarcExtension",
            "member": "Method int org.gradle.api.plugins.quality.CodeNarcExtension.getMaxPriority3Violations()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarcExtension",
            "member": "Method void org.gradle.api.plugins.quality.CodeNarcExtension.setMaxPriority3Violations(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarcExtension",
            "member": "Method java.lang.String org.gradle.api.plugins.quality.CodeNarcExtension.getReportFormat()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeNarcExtension",
            "member": "Method void org.gradle.api.plugins.quality.CodeNarcExtension.setReportFormat(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeQualityExtension",
            "member": "Method java.io.File org.gradle.api.plugins.quality.CodeQualityExtension.getReportsDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeQualityExtension",
            "member": "Method void org.gradle.api.plugins.quality.CodeQualityExtension.setReportsDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeQualityExtension",
            "member": "Method void org.gradle.api.plugins.quality.CodeQualityExtension.setSourceSets(java.util.Collection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeQualityExtension",
            "member": "Method java.util.Collection org.gradle.api.plugins.quality.CodeQualityExtension.getSourceSets()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeQualityExtension",
            "member": "Method java.lang.String org.gradle.api.plugins.quality.CodeQualityExtension.getToolVersion()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeQualityExtension",
            "member": "Method void org.gradle.api.plugins.quality.CodeQualityExtension.setToolVersion(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeQualityExtension",
            "member": "Method boolean org.gradle.api.plugins.quality.CodeQualityExtension.getIgnoreFailures()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeQualityExtension",
            "member": "Method boolean org.gradle.api.plugins.quality.CodeQualityExtension.isIgnoreFailures()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CodeQualityExtension",
            "member": "Method void org.gradle.api.plugins.quality.CodeQualityExtension.setIgnoreFailures(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.plugins.quality.Pmd.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method void org.gradle.api.plugins.quality.Pmd.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method java.io.File org.gradle.api.plugins.quality.Pmd.getIncrementalCacheFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.plugins.quality.Pmd.getPmdClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method void org.gradle.api.plugins.quality.Pmd.setPmdClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.plugins.quality.Pmd.getRuleSetFiles()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method void org.gradle.api.plugins.quality.Pmd.setRuleSetFiles(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method java.util.List org.gradle.api.plugins.quality.Pmd.getRuleSets()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method void org.gradle.api.plugins.quality.Pmd.setRuleSets(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method org.gradle.api.file.FileTree org.gradle.api.plugins.quality.Pmd.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method org.gradle.api.plugins.quality.TargetJdk org.gradle.api.plugins.quality.Pmd.getTargetJdk()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method void org.gradle.api.plugins.quality.Pmd.setTargetJdk(org.gradle.api.plugins.quality.TargetJdk)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method boolean org.gradle.api.plugins.quality.Pmd.isConsoleOutput()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method boolean org.gradle.api.plugins.quality.Pmd.getConsoleOutput()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method void org.gradle.api.plugins.quality.Pmd.setConsoleOutput(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.plugins.quality.PmdExtension.getRuleSetFiles()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method void org.gradle.api.plugins.quality.PmdExtension.setRuleSetFiles(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method java.util.List org.gradle.api.plugins.quality.PmdExtension.getRuleSets()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method void org.gradle.api.plugins.quality.PmdExtension.setRuleSets(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method org.gradle.api.plugins.quality.TargetJdk org.gradle.api.plugins.quality.PmdExtension.getTargetJdk()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method void org.gradle.api.plugins.quality.PmdExtension.setTargetJdk(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method void org.gradle.api.plugins.quality.PmdExtension.setTargetJdk(org.gradle.api.plugins.quality.TargetJdk)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method boolean org.gradle.api.plugins.quality.PmdExtension.isConsoleOutput()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method boolean org.gradle.api.plugins.quality.PmdExtension.getConsoleOutput()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method void org.gradle.api.plugins.quality.PmdExtension.setConsoleOutput(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyArtifact",
            "member": "Method void org.gradle.api.publish.ivy.IvyArtifact.setClassifier(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyArtifact",
            "member": "Method java.lang.String org.gradle.api.publish.ivy.IvyArtifact.getClassifier()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyArtifact",
            "member": "Method void org.gradle.api.publish.ivy.IvyArtifact.setConf(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyArtifact",
            "member": "Method java.lang.String org.gradle.api.publish.ivy.IvyArtifact.getConf()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyArtifact",
            "member": "Method java.lang.String org.gradle.api.publish.ivy.IvyArtifact.getExtension()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyArtifact",
            "member": "Method void org.gradle.api.publish.ivy.IvyArtifact.setExtension(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyArtifact",
            "member": "Method java.lang.String org.gradle.api.publish.ivy.IvyArtifact.getName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyArtifact",
            "member": "Method void org.gradle.api.publish.ivy.IvyArtifact.setName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyArtifact",
            "member": "Method void org.gradle.api.publish.ivy.IvyArtifact.setType(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyArtifact",
            "member": "Method java.lang.String org.gradle.api.publish.ivy.IvyArtifact.getType()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyModuleDescriptorSpec",
            "member": "Method java.lang.String org.gradle.api.publish.ivy.IvyModuleDescriptorSpec.getBranch()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyModuleDescriptorSpec",
            "member": "Method void org.gradle.api.publish.ivy.IvyModuleDescriptorSpec.setBranch(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyModuleDescriptorSpec",
            "member": "Method org.gradle.api.publish.ivy.IvyExtraInfoSpec org.gradle.api.publish.ivy.IvyModuleDescriptorSpec.getExtraInfo()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyModuleDescriptorSpec",
            "member": "Method void org.gradle.api.publish.ivy.IvyModuleDescriptorSpec.setStatus(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyModuleDescriptorSpec",
            "member": "Method java.lang.String org.gradle.api.publish.ivy.IvyModuleDescriptorSpec.getStatus()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyPublication",
            "member": "Method org.gradle.api.publish.ivy.IvyModuleDescriptorSpec org.gradle.api.publish.ivy.IvyPublication.getDescriptor()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyPublication",
            "member": "Method void org.gradle.api.publish.ivy.IvyPublication.setModule(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyPublication",
            "member": "Method java.lang.String org.gradle.api.publish.ivy.IvyPublication.getModule()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyPublication",
            "member": "Method java.lang.String org.gradle.api.publish.ivy.IvyPublication.getOrganisation()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyPublication",
            "member": "Method void org.gradle.api.publish.ivy.IvyPublication.setOrganisation(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyPublication",
            "member": "Method void org.gradle.api.publish.ivy.IvyPublication.setRevision(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyPublication",
            "member": "Method java.lang.String org.gradle.api.publish.ivy.IvyPublication.getRevision()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor",
            "member": "Method void org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.setDescriptor(org.gradle.api.publish.ivy.IvyModuleDescriptorSpec)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor",
            "member": "Method org.gradle.api.publish.ivy.IvyModuleDescriptorSpec org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.getDescriptor()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor",
            "member": "Method java.io.File org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.getDestination()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor",
            "member": "Method void org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.setDestination(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor",
            "member": "Method void org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.setDestination(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.PublishToIvyRepository",
            "member": "Method void org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.setPublication(org.gradle.api.publish.ivy.IvyPublication)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.PublishToIvyRepository",
            "member": "Method org.gradle.api.publish.ivy.IvyPublication org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.getPublication()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.PublishToIvyRepository",
            "member": "Method void org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.setRepository(org.gradle.api.artifacts.repositories.IvyArtifactRepository)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.PublishToIvyRepository",
            "member": "Method org.gradle.api.artifacts.repositories.IvyArtifactRepository org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.getRepository()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenArtifact",
            "member": "Method void org.gradle.api.publish.maven.MavenArtifact.setClassifier(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenArtifact",
            "member": "Method java.lang.String org.gradle.api.publish.maven.MavenArtifact.getClassifier()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenArtifact",
            "member": "Method java.lang.String org.gradle.api.publish.maven.MavenArtifact.getExtension()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenArtifact",
            "member": "Method void org.gradle.api.publish.maven.MavenArtifact.setExtension(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenPom",
            "member": "Method java.lang.String org.gradle.api.publish.maven.MavenPom.getPackaging()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenPom",
            "member": "Method void org.gradle.api.publish.maven.MavenPom.setPackaging(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenPublication",
            "member": "Method void org.gradle.api.publish.maven.MavenPublication.setArtifactId(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenPublication",
            "member": "Method java.lang.String org.gradle.api.publish.maven.MavenPublication.getArtifactId()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenPublication",
            "member": "Method void org.gradle.api.publish.maven.MavenPublication.setGroupId(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenPublication",
            "member": "Method java.lang.String org.gradle.api.publish.maven.MavenPublication.getGroupId()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenPublication",
            "member": "Method void org.gradle.api.publish.maven.MavenPublication.setVersion(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenPublication",
            "member": "Method java.lang.String org.gradle.api.publish.maven.MavenPublication.getVersion()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.AbstractPublishToMaven",
            "member": "Method void org.gradle.api.publish.maven.tasks.AbstractPublishToMaven.setPublication(org.gradle.api.publish.maven.MavenPublication)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.AbstractPublishToMaven",
            "member": "Method org.gradle.api.publish.maven.MavenPublication org.gradle.api.publish.maven.tasks.AbstractPublishToMaven.getPublication()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.GenerateMavenPom",
            "member": "Method java.io.File org.gradle.api.publish.maven.tasks.GenerateMavenPom.getDestination()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.GenerateMavenPom",
            "member": "Method void org.gradle.api.publish.maven.tasks.GenerateMavenPom.setDestination(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.GenerateMavenPom",
            "member": "Method void org.gradle.api.publish.maven.tasks.GenerateMavenPom.setDestination(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.GenerateMavenPom",
            "member": "Method void org.gradle.api.publish.maven.tasks.GenerateMavenPom.setPom(org.gradle.api.publish.maven.MavenPom)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.GenerateMavenPom",
            "member": "Method org.gradle.api.publish.maven.MavenPom org.gradle.api.publish.maven.tasks.GenerateMavenPom.getPom()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.PublishToMavenRepository",
            "member": "Method void org.gradle.api.publish.maven.tasks.PublishToMavenRepository.setRepository(org.gradle.api.artifacts.repositories.MavenArtifactRepository)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.PublishToMavenRepository",
            "member": "Method org.gradle.api.artifacts.repositories.MavenArtifactRepository org.gradle.api.publish.maven.tasks.PublishToMavenRepository.getRepository()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.reporting.DirectoryReport",
            "member": "Method java.io.File org.gradle.api.reporting.DirectoryReport.getEntryPoint()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.reporting.Report",
            "member": "Method boolean org.gradle.api.reporting.Report.isEnabled()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.reporting.Report",
            "member": "Method void org.gradle.api.reporting.Report.setEnabled(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.reporting.ReportingExtension",
            "member": "Method java.lang.String org.gradle.api.reporting.ReportingExtension.getApiDocTitle()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method java.lang.Integer org.gradle.api.tasks.AbstractCopyTask.getDirMode()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask org.gradle.api.tasks.AbstractCopyTask.setDirMode(java.lang.Integer)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.file.CopyProcessingSpec org.gradle.api.tasks.AbstractCopyTask.setDirMode(java.lang.Integer)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method void org.gradle.api.tasks.AbstractCopyTask.setDuplicatesStrategy(org.gradle.api.file.DuplicatesStrategy)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.file.DuplicatesStrategy org.gradle.api.tasks.AbstractCopyTask.getDuplicatesStrategy()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask org.gradle.api.tasks.AbstractCopyTask.setExcludes(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.util.PatternFilterable org.gradle.api.tasks.AbstractCopyTask.setExcludes(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.file.CopySpec org.gradle.api.tasks.AbstractCopyTask.setExcludes(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method java.util.Set org.gradle.api.tasks.AbstractCopyTask.getExcludes()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method java.lang.Integer org.gradle.api.tasks.AbstractCopyTask.getFileMode()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.file.CopyProcessingSpec org.gradle.api.tasks.AbstractCopyTask.setFileMode(java.lang.Integer)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask org.gradle.api.tasks.AbstractCopyTask.setFileMode(java.lang.Integer)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method java.lang.String org.gradle.api.tasks.AbstractCopyTask.getFilteringCharset()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method void org.gradle.api.tasks.AbstractCopyTask.setFilteringCharset(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method boolean org.gradle.api.tasks.AbstractCopyTask.getIncludeEmptyDirs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method void org.gradle.api.tasks.AbstractCopyTask.setIncludeEmptyDirs(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask org.gradle.api.tasks.AbstractCopyTask.setIncludes(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.util.PatternFilterable org.gradle.api.tasks.AbstractCopyTask.setIncludes(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.file.CopySpec org.gradle.api.tasks.AbstractCopyTask.setIncludes(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method java.util.Set org.gradle.api.tasks.AbstractCopyTask.getIncludes()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method void org.gradle.api.tasks.AbstractCopyTask.setCaseSensitive(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method boolean org.gradle.api.tasks.AbstractCopyTask.isCaseSensitive()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.api.tasks.AbstractExecTask org.gradle.api.tasks.AbstractExecTask.setArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.process.ExecSpec org.gradle.api.tasks.AbstractExecTask.setArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.api.tasks.AbstractExecTask org.gradle.api.tasks.AbstractExecTask.setArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.process.ExecSpec org.gradle.api.tasks.AbstractExecTask.setArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method java.util.List org.gradle.api.tasks.AbstractExecTask.getArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method java.util.List org.gradle.api.tasks.AbstractExecTask.getArgumentProviders()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method void org.gradle.api.tasks.AbstractExecTask.setCommandLine(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method void org.gradle.api.tasks.AbstractExecTask.setCommandLine(java.lang.Object[])",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method void org.gradle.api.tasks.AbstractExecTask.setCommandLine(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method java.util.List org.gradle.api.tasks.AbstractExecTask.getCommandLine()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method void org.gradle.api.tasks.AbstractExecTask.setEnvironment(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method java.util.Map org.gradle.api.tasks.AbstractExecTask.getEnvironment()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.api.tasks.AbstractExecTask org.gradle.api.tasks.AbstractExecTask.setErrorOutput(java.io.OutputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.process.BaseExecSpec org.gradle.api.tasks.AbstractExecTask.setErrorOutput(java.io.OutputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method java.io.OutputStream org.gradle.api.tasks.AbstractExecTask.getErrorOutput()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method void org.gradle.api.tasks.AbstractExecTask.setExecutable(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method void org.gradle.api.tasks.AbstractExecTask.setExecutable(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method java.lang.String org.gradle.api.tasks.AbstractExecTask.getExecutable()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.api.tasks.AbstractExecTask org.gradle.api.tasks.AbstractExecTask.setStandardInput(java.io.InputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.process.BaseExecSpec org.gradle.api.tasks.AbstractExecTask.setStandardInput(java.io.InputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method java.io.InputStream org.gradle.api.tasks.AbstractExecTask.getStandardInput()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.process.BaseExecSpec org.gradle.api.tasks.AbstractExecTask.setStandardOutput(java.io.OutputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.api.tasks.AbstractExecTask org.gradle.api.tasks.AbstractExecTask.setStandardOutput(java.io.OutputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method java.io.OutputStream org.gradle.api.tasks.AbstractExecTask.getStandardOutput()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method java.io.File org.gradle.api.tasks.AbstractExecTask.getWorkingDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method void org.gradle.api.tasks.AbstractExecTask.setWorkingDir(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method void org.gradle.api.tasks.AbstractExecTask.setWorkingDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.process.BaseExecSpec org.gradle.api.tasks.AbstractExecTask.setIgnoreExitValue(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.api.tasks.AbstractExecTask org.gradle.api.tasks.AbstractExecTask.setIgnoreExitValue(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method boolean org.gradle.api.tasks.AbstractExecTask.isIgnoreExitValue()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Copy",
            "member": "Method java.io.File org.gradle.api.tasks.Copy.getDestinationDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Copy",
            "member": "Method void org.gradle.api.tasks.Copy.setDestinationDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Delete",
            "member": "Method boolean org.gradle.api.tasks.Delete.isFollowSymlinks()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Delete",
            "member": "Method void org.gradle.api.tasks.Delete.setFollowSymlinks(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.util.List org.gradle.api.tasks.JavaExec.getAllJvmArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setAllJvmArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setAllJvmArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.process.JavaExecSpec org.gradle.api.tasks.JavaExec.setArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec org.gradle.api.tasks.JavaExec.setArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.process.JavaExecSpec org.gradle.api.tasks.JavaExec.setArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec org.gradle.api.tasks.JavaExec.setArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.util.List org.gradle.api.tasks.JavaExec.getArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.JavaExec.getBootstrapClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setBootstrapClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.JavaExec.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.process.JavaExecSpec org.gradle.api.tasks.JavaExec.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec org.gradle.api.tasks.JavaExec.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.util.List org.gradle.api.tasks.JavaExec.getCommandLine()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setDebug(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method boolean org.gradle.api.tasks.JavaExec.getDebug()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.process.JavaDebugOptions org.gradle.api.tasks.JavaExec.getDebugOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.lang.String org.gradle.api.tasks.JavaExec.getDefaultCharacterEncoding()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setDefaultCharacterEncoding(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method boolean org.gradle.api.tasks.JavaExec.getEnableAssertions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setEnableAssertions(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setEnvironment(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.util.Map org.gradle.api.tasks.JavaExec.getEnvironment()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.process.BaseExecSpec org.gradle.api.tasks.JavaExec.setErrorOutput(java.io.OutputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec org.gradle.api.tasks.JavaExec.setErrorOutput(java.io.OutputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.io.OutputStream org.gradle.api.tasks.JavaExec.getErrorOutput()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setExecutable(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setExecutable(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.lang.String org.gradle.api.tasks.JavaExec.getExecutable()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.JavaVersion org.gradle.api.tasks.JavaExec.getJavaVersion()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.util.List org.gradle.api.tasks.JavaExec.getJvmArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setJvmArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setJvmArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.util.List org.gradle.api.tasks.JavaExec.getJvmArgumentProviders()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.lang.String org.gradle.api.tasks.JavaExec.getMaxHeapSize()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setMaxHeapSize(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.lang.String org.gradle.api.tasks.JavaExec.getMinHeapSize()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setMinHeapSize(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.jvm.ModularitySpec org.gradle.api.tasks.JavaExec.getModularity()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.process.BaseExecSpec org.gradle.api.tasks.JavaExec.setStandardInput(java.io.InputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec org.gradle.api.tasks.JavaExec.setStandardInput(java.io.InputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.io.InputStream org.gradle.api.tasks.JavaExec.getStandardInput()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec org.gradle.api.tasks.JavaExec.setStandardOutput(java.io.OutputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.process.BaseExecSpec org.gradle.api.tasks.JavaExec.setStandardOutput(java.io.OutputStream)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.io.OutputStream org.gradle.api.tasks.JavaExec.getStandardOutput()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setSystemProperties(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.util.Map org.gradle.api.tasks.JavaExec.getSystemProperties()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method java.io.File org.gradle.api.tasks.JavaExec.getWorkingDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setWorkingDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method void org.gradle.api.tasks.JavaExec.setWorkingDir(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.process.BaseExecSpec org.gradle.api.tasks.JavaExec.setIgnoreExitValue(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.process.JavaExecSpec org.gradle.api.tasks.JavaExec.setIgnoreExitValue(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method boolean org.gradle.api.tasks.JavaExec.isIgnoreExitValue()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceSet",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.SourceSet.getAnnotationProcessorPath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceSet",
            "member": "Method void org.gradle.api.tasks.SourceSet.setAnnotationProcessorPath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceSet",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.SourceSet.getCompileClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceSet",
            "member": "Method void org.gradle.api.tasks.SourceSet.setCompileClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceSet",
            "member": "Method void org.gradle.api.tasks.SourceSet.setRuntimeClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceSet",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.SourceSet.getRuntimeClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceSetOutput",
            "member": "Method java.io.File org.gradle.api.tasks.SourceSetOutput.getResourcesDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceSetOutput",
            "member": "Method void org.gradle.api.tasks.SourceSetOutput.setResourcesDir(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceSetOutput",
            "member": "Method void org.gradle.api.tasks.SourceSetOutput.setResourcesDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceTask",
            "member": "Method org.gradle.api.file.FileTree org.gradle.api.tasks.SourceTask.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Sync",
            "member": "Method java.io.File org.gradle.api.tasks.Sync.getDestinationDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Sync",
            "member": "Method void org.gradle.api.tasks.Sync.setDestinationDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method void org.gradle.api.tasks.WriteProperties.setComment(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method java.lang.String org.gradle.api.tasks.WriteProperties.getComment()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method void org.gradle.api.tasks.WriteProperties.setEncoding(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method java.lang.String org.gradle.api.tasks.WriteProperties.getEncoding()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method void org.gradle.api.tasks.WriteProperties.setLineSeparator(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method java.lang.String org.gradle.api.tasks.WriteProperties.getLineSeparator()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method void org.gradle.api.tasks.WriteProperties.setOutputFile(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method void org.gradle.api.tasks.WriteProperties.setOutputFile(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method java.io.File org.gradle.api.tasks.WriteProperties.getOutputFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method java.util.Map org.gradle.api.tasks.WriteProperties.getProperties()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method void org.gradle.api.tasks.WriteProperties.setProperties(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.ant.AntTarget",
            "member": "Method void org.gradle.api.tasks.ant.AntTarget.setBaseDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.ant.AntTarget",
            "member": "Method java.io.File org.gradle.api.tasks.ant.AntTarget.getBaseDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.ant.AntTarget",
            "member": "Method void org.gradle.api.tasks.ant.AntTarget.setDescription(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.ant.AntTarget",
            "member": "Method java.lang.String org.gradle.api.tasks.ant.AntTarget.getDescription()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.ant.AntTarget",
            "member": "Method org.apache.tools.ant.Target org.gradle.api.tasks.ant.AntTarget.getTarget()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.ant.AntTarget",
            "member": "Method void org.gradle.api.tasks.ant.AntTarget.setTarget(org.apache.tools.ant.Target)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.AbstractArchiveTask",
            "member": "Method boolean org.gradle.api.tasks.bundling.AbstractArchiveTask.isPreserveFileTimestamps()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.AbstractArchiveTask",
            "member": "Method void org.gradle.api.tasks.bundling.AbstractArchiveTask.setPreserveFileTimestamps(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.AbstractArchiveTask",
            "member": "Method boolean org.gradle.api.tasks.bundling.AbstractArchiveTask.isReproducibleFileOrder()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.AbstractArchiveTask",
            "member": "Method void org.gradle.api.tasks.bundling.AbstractArchiveTask.setReproducibleFileOrder(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.Tar",
            "member": "Method org.gradle.api.tasks.bundling.Compression org.gradle.api.tasks.bundling.Tar.getCompression()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.Tar",
            "member": "Method void org.gradle.api.tasks.bundling.Tar.setCompression(org.gradle.api.tasks.bundling.Compression)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.War",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.bundling.War.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.War",
            "member": "Method void org.gradle.api.tasks.bundling.War.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.War",
            "member": "Method void org.gradle.api.tasks.bundling.War.setClasspath(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.War",
            "member": "Method java.io.File org.gradle.api.tasks.bundling.War.getWebXml()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.War",
            "member": "Method void org.gradle.api.tasks.bundling.War.setWebXml(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.Zip",
            "member": "Method org.gradle.api.tasks.bundling.ZipEntryCompression org.gradle.api.tasks.bundling.Zip.getEntryCompression()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.Zip",
            "member": "Method void org.gradle.api.tasks.bundling.Zip.setEntryCompression(org.gradle.api.tasks.bundling.ZipEntryCompression)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.Zip",
            "member": "Method void org.gradle.api.tasks.bundling.Zip.setMetadataCharset(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.Zip",
            "member": "Method java.lang.String org.gradle.api.tasks.bundling.Zip.getMetadataCharset()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.Zip",
            "member": "Method void org.gradle.api.tasks.bundling.Zip.setZip64(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.Zip",
            "member": "Method boolean org.gradle.api.tasks.bundling.Zip.isZip64()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.compile.AbstractCompile.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method void org.gradle.api.tasks.compile.AbstractCompile.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method java.lang.String org.gradle.api.tasks.compile.AbstractCompile.getSourceCompatibility()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method void org.gradle.api.tasks.compile.AbstractCompile.setSourceCompatibility(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method void org.gradle.api.tasks.compile.AbstractCompile.setTargetCompatibility(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method java.lang.String org.gradle.api.tasks.compile.AbstractCompile.getTargetCompatibility()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.BaseForkOptions",
            "member": "Method java.util.List org.gradle.api.tasks.compile.BaseForkOptions.getJvmArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.BaseForkOptions",
            "member": "Method void org.gradle.api.tasks.compile.BaseForkOptions.setJvmArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.BaseForkOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.compile.BaseForkOptions.getMemoryInitialSize()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.BaseForkOptions",
            "member": "Method void org.gradle.api.tasks.compile.BaseForkOptions.setMemoryInitialSize(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.BaseForkOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.compile.BaseForkOptions.getMemoryMaximumSize()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.BaseForkOptions",
            "member": "Method void org.gradle.api.tasks.compile.BaseForkOptions.setMemoryMaximumSize(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method java.util.List org.gradle.api.tasks.compile.CompileOptions.getAllCompilerArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.compile.CompileOptions.getAnnotationProcessorPath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setAnnotationProcessorPath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.compile.CompileOptions.getBootstrapClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setBootstrapClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setCompilerArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method java.util.List org.gradle.api.tasks.compile.CompileOptions.getCompilerArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setDebugOptions(org.gradle.api.tasks.compile.DebugOptions)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.DebugOptions org.gradle.api.tasks.compile.CompileOptions.getDebugOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setEncoding(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.compile.CompileOptions.getEncoding()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.compile.CompileOptions.getExtensionDirs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setExtensionDirs(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setForkOptions(org.gradle.api.tasks.compile.ForkOptions)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.ForkOptions org.gradle.api.tasks.compile.CompileOptions.getForkOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.compile.CompileOptions.getSourcepath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setSourcepath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setDebug(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.CompileOptions.isDebug()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.CompileOptions.isDeprecation()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setDeprecation(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.CompileOptions.isFailOnError()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setFailOnError(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setFork(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.CompileOptions.isFork()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions org.gradle.api.tasks.compile.CompileOptions.setIncremental(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.CompileOptions.isIncremental()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.CompileOptions.isListFiles()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setListFiles(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.CompileOptions.isVerbose()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setVerbose(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.CompileOptions.isWarnings()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.CompileOptions.setWarnings(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.DebugOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.compile.DebugOptions.getDebugLevel()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.DebugOptions",
            "member": "Method void org.gradle.api.tasks.compile.DebugOptions.setDebugLevel(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.ForkOptions",
            "member": "Method void org.gradle.api.tasks.compile.ForkOptions.setExecutable(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.ForkOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.compile.ForkOptions.getExecutable()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.ForkOptions",
            "member": "Method java.io.File org.gradle.api.tasks.compile.ForkOptions.getJavaHome()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.ForkOptions",
            "member": "Method void org.gradle.api.tasks.compile.ForkOptions.setJavaHome(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompile",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.compile.GroovyCompile.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompile",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.compile.GroovyCompile.getGroovyClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompile",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompile.setGroovyClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompile",
            "member": "Method org.gradle.api.tasks.compile.GroovyCompileOptions org.gradle.api.tasks.compile.GroovyCompile.getGroovyOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompile",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions org.gradle.api.tasks.compile.GroovyCompile.getOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompile",
            "member": "Method org.gradle.api.file.FileTree org.gradle.api.tasks.compile.GroovyCompile.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method java.io.File org.gradle.api.tasks.compile.GroovyCompileOptions.getConfigurationScript()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setConfigurationScript(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setEncoding(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.compile.GroovyCompileOptions.getEncoding()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method java.util.List org.gradle.api.tasks.compile.GroovyCompileOptions.getFileExtensions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setFileExtensions(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setForkOptions(org.gradle.api.tasks.compile.GroovyForkOptions)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method org.gradle.api.tasks.compile.GroovyForkOptions org.gradle.api.tasks.compile.GroovyCompileOptions.getForkOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method java.util.Map org.gradle.api.tasks.compile.GroovyCompileOptions.getOptimizationOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setOptimizationOptions(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setStubDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method java.io.File org.gradle.api.tasks.compile.GroovyCompileOptions.getStubDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.GroovyCompileOptions.isFailOnError()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setFailOnError(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setFork(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.GroovyCompileOptions.isFork()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.GroovyCompileOptions.isJavaAnnotationProcessing()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setJavaAnnotationProcessing(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.GroovyCompileOptions.isKeepStubs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setKeepStubs(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.GroovyCompileOptions.isListFiles()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setListFiles(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.GroovyCompileOptions.isParameters()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setParameters(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method boolean org.gradle.api.tasks.compile.GroovyCompileOptions.isVerbose()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method void org.gradle.api.tasks.compile.GroovyCompileOptions.setVerbose(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.compile.JavaCompile.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.jvm.ModularitySpec org.gradle.api.tasks.compile.JavaCompile.getModularity()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions org.gradle.api.tasks.compile.JavaCompile.getOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.file.FileTree org.gradle.api.tasks.compile.JavaCompile.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions",
            "member": "Method java.util.List org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions.getAllJvmArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask",
            "member": "Method void org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask.setConfigurations(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask",
            "member": "Method java.util.Set org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask.getConfigurations()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.ConventionReportTask",
            "member": "Method void org.gradle.api.tasks.diagnostics.ConventionReportTask.setOutputFile(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.ConventionReportTask",
            "member": "Method java.io.File org.gradle.api.tasks.diagnostics.ConventionReportTask.getOutputFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.ConventionReportTask",
            "member": "Method void org.gradle.api.tasks.diagnostics.ConventionReportTask.setProjects(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.ConventionReportTask",
            "member": "Method java.util.Set org.gradle.api.tasks.diagnostics.ConventionReportTask.getProjects()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method org.gradle.api.artifacts.Configuration org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.getConfiguration()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method void org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.setConfiguration(org.gradle.api.artifacts.Configuration)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method void org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.setConfiguration(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method org.gradle.api.specs.Spec org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.getDependencySpec()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method void org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.setDependencySpec(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method void org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.setDependencySpec(org.gradle.api.specs.Spec)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method boolean org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.isShowSinglePathToDependency()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method void org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.setShowSinglePathToDependency(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method boolean org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.getShowSinglePathToDependency()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.TaskReportTask",
            "member": "Method void org.gradle.api.tasks.diagnostics.TaskReportTask.setDisplayGroup(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.TaskReportTask",
            "member": "Method java.lang.String org.gradle.api.tasks.diagnostics.TaskReportTask.getDisplayGroup()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.TaskReportTask",
            "member": "Method boolean org.gradle.api.tasks.diagnostics.TaskReportTask.isDetail()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.javadoc.Groovydoc.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method java.io.File org.gradle.api.tasks.javadoc.Groovydoc.getDestinationDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setDestinationDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method java.lang.String org.gradle.api.tasks.javadoc.Groovydoc.getDocTitle()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setDocTitle(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method java.lang.String org.gradle.api.tasks.javadoc.Groovydoc.getFooter()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setFooter(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.javadoc.Groovydoc.getGroovyClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setGroovyClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setHeader(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method java.lang.String org.gradle.api.tasks.javadoc.Groovydoc.getHeader()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setLinks(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method java.util.Set org.gradle.api.tasks.javadoc.Groovydoc.getLinks()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method org.gradle.api.file.FileTree org.gradle.api.tasks.javadoc.Groovydoc.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method java.lang.String org.gradle.api.tasks.javadoc.Groovydoc.getWindowTitle()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setWindowTitle(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method boolean org.gradle.api.tasks.javadoc.Groovydoc.isIncludePrivate()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setIncludePrivate(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method boolean org.gradle.api.tasks.javadoc.Groovydoc.isNoTimestamp()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setNoTimestamp(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method boolean org.gradle.api.tasks.javadoc.Groovydoc.isNoVersionStamp()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setNoVersionStamp(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method boolean org.gradle.api.tasks.javadoc.Groovydoc.isUse()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Groovydoc.setUse(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.javadoc.Javadoc.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Javadoc.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method java.io.File org.gradle.api.tasks.javadoc.Javadoc.getDestinationDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Javadoc.setDestinationDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Javadoc.setExecutable(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method java.lang.String org.gradle.api.tasks.javadoc.Javadoc.getExecutable()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method java.lang.String org.gradle.api.tasks.javadoc.Javadoc.getMaxMemory()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Javadoc.setMaxMemory(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.jvm.ModularitySpec org.gradle.api.tasks.javadoc.Javadoc.getModularity()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.file.FileTree org.gradle.api.tasks.javadoc.Javadoc.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method java.lang.String org.gradle.api.tasks.javadoc.Javadoc.getTitle()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Javadoc.setTitle(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method boolean org.gradle.api.tasks.javadoc.Javadoc.isFailOnError()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Javadoc.setFailOnError(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method boolean org.gradle.api.tasks.javadoc.Javadoc.isVerbose()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method void org.gradle.api.tasks.javadoc.Javadoc.setVerbose(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaCompile",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.scala.ScalaCompile.getScalaClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaCompile",
            "member": "Method void org.gradle.api.tasks.scala.ScalaCompile.setScalaClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaCompile",
            "member": "Method org.gradle.language.scala.tasks.BaseScalaCompileOptions org.gradle.api.tasks.scala.ScalaCompile.getScalaCompileOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaCompile",
            "member": "Method org.gradle.api.tasks.scala.ScalaCompileOptions org.gradle.api.tasks.scala.ScalaCompile.getScalaCompileOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaCompile",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.scala.ScalaCompile.getScalaCompilerPlugins()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaCompile",
            "member": "Method void org.gradle.api.tasks.scala.ScalaCompile.setScalaCompilerPlugins(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaCompile",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.scala.ScalaCompile.getZincClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaCompile",
            "member": "Method void org.gradle.api.tasks.scala.ScalaCompile.setZincClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.scala.ScalaDoc.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDoc.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method java.io.File org.gradle.api.tasks.scala.ScalaDoc.getDestinationDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDoc.setDestinationDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.scala.ScalaDoc.getScalaClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDoc.setScalaClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method org.gradle.api.tasks.scala.ScalaDocOptions org.gradle.api.tasks.scala.ScalaDoc.getScalaDocOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDoc.setScalaDocOptions(org.gradle.api.tasks.scala.ScalaDocOptions)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method org.gradle.api.file.FileTree org.gradle.api.tasks.scala.ScalaDoc.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method java.lang.String org.gradle.api.tasks.scala.ScalaDoc.getTitle()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDoc.setTitle(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method java.util.List org.gradle.api.tasks.scala.ScalaDocOptions.getAdditionalParameters()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDocOptions.setAdditionalParameters(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.scala.ScalaDocOptions.getBottom()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDocOptions.setBottom(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.scala.ScalaDocOptions.getDocTitle()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDocOptions.setDocTitle(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.scala.ScalaDocOptions.getFooter()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDocOptions.setFooter(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDocOptions.setHeader(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.scala.ScalaDocOptions.getHeader()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.scala.ScalaDocOptions.getTop()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDocOptions.setTop(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.scala.ScalaDocOptions.getWindowTitle()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDocOptions.setWindowTitle(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method boolean org.gradle.api.tasks.scala.ScalaDocOptions.isDeprecation()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDocOptions.setDeprecation(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method boolean org.gradle.api.tasks.scala.ScalaDocOptions.isUnchecked()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Method void org.gradle.api.tasks.scala.ScalaDocOptions.setUnchecked(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.TestFilter org.gradle.api.tasks.testing.AbstractTestTask.getFilter()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.reporting.ReportContainer org.gradle.api.tasks.testing.AbstractTestTask.getReports()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.TestTaskReports org.gradle.api.tasks.testing.AbstractTestTask.getReports()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.JUnitXmlReport",
            "member": "Method boolean org.gradle.api.tasks.testing.JUnitXmlReport.isOutputPerTestCase()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.JUnitXmlReport",
            "member": "Method void org.gradle.api.tasks.testing.JUnitXmlReport.setOutputPerTestCase(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.testing.Test.getBootstrapClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setBootstrapClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.testing.Test.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setDebug(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method boolean org.gradle.api.tasks.testing.Test.getDebug()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method java.lang.String org.gradle.api.tasks.testing.Test.getDefaultCharacterEncoding()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setDefaultCharacterEncoding(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method boolean org.gradle.api.tasks.testing.Test.getEnableAssertions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setEnableAssertions(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setEnvironment(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method java.util.Map org.gradle.api.tasks.testing.Test.getEnvironment()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test org.gradle.api.tasks.testing.Test.setExcludes(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.util.PatternFilterable org.gradle.api.tasks.testing.Test.setExcludes(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.Test.getExcludes()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setExecutable(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setExecutable(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method java.lang.String org.gradle.api.tasks.testing.Test.getExecutable()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method boolean org.gradle.api.tasks.testing.Test.getFailFast()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setFailFast(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setForkEvery(java.lang.Long)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method long org.gradle.api.tasks.testing.Test.getForkEvery()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.util.PatternFilterable org.gradle.api.tasks.testing.Test.setIncludes(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test org.gradle.api.tasks.testing.Test.setIncludes(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.Test.getIncludes()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.JavaVersion org.gradle.api.tasks.testing.Test.getJavaVersion()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method java.util.List org.gradle.api.tasks.testing.Test.getJvmArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setJvmArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setJvmArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method java.lang.String org.gradle.api.tasks.testing.Test.getMaxHeapSize()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setMaxHeapSize(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method int org.gradle.api.tasks.testing.Test.getMaxParallelForks()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setMaxParallelForks(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method java.lang.String org.gradle.api.tasks.testing.Test.getMinHeapSize()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setMinHeapSize(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setSystemProperties(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method java.util.Map org.gradle.api.tasks.testing.Test.getSystemProperties()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setTestClassesDirs(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.api.tasks.testing.Test.getTestClassesDirs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method java.io.File org.gradle.api.tasks.testing.Test.getWorkingDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setWorkingDir(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setWorkingDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method boolean org.gradle.api.tasks.testing.Test.isScanForTestClasses()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method void org.gradle.api.tasks.testing.Test.setScanForTestClasses(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestFilter",
            "member": "Method org.gradle.api.tasks.testing.TestFilter org.gradle.api.tasks.testing.TestFilter.setExcludePatterns(java.lang.String[])",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestFilter",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.TestFilter.getExcludePatterns()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestFilter",
            "member": "Method org.gradle.api.tasks.testing.TestFilter org.gradle.api.tasks.testing.TestFilter.setIncludePatterns(java.lang.String[])",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestFilter",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.TestFilter.getIncludePatterns()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestFilter",
            "member": "Method boolean org.gradle.api.tasks.testing.TestFilter.isFailOnNoMatchingTests()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestFilter",
            "member": "Method void org.gradle.api.tasks.testing.TestFilter.setFailOnNoMatchingTests(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junit.JUnitOptions",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.junit.JUnitOptions.getExcludeCategories()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junit.JUnitOptions",
            "member": "Method void org.gradle.api.tasks.testing.junit.JUnitOptions.setExcludeCategories(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junit.JUnitOptions",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.junit.JUnitOptions.getIncludeCategories()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junit.JUnitOptions",
            "member": "Method void org.gradle.api.tasks.testing.junit.JUnitOptions.setIncludeCategories(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions",
            "member": "Method void org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions.setExcludeEngines(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions.getExcludeEngines()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions",
            "member": "Method void org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions.setExcludeTags(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions.getExcludeTags()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions",
            "member": "Method void org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions.setIncludeEngines(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions.getIncludeEngines()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions",
            "member": "Method void org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions.setIncludeTags(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions.getIncludeTags()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method int org.gradle.api.tasks.testing.logging.TestLogging.getDisplayGranularity()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setDisplayGranularity(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.logging.TestLogging.getEvents()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setEvents(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setEvents(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method org.gradle.api.tasks.testing.logging.TestExceptionFormat org.gradle.api.tasks.testing.logging.TestLogging.getExceptionFormat()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setExceptionFormat(org.gradle.api.tasks.testing.logging.TestExceptionFormat)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setExceptionFormat(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method int org.gradle.api.tasks.testing.logging.TestLogging.getMaxGranularity()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setMaxGranularity(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method int org.gradle.api.tasks.testing.logging.TestLogging.getMinGranularity()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setMinGranularity(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method boolean org.gradle.api.tasks.testing.logging.TestLogging.getShowCauses()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setShowCauses(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method boolean org.gradle.api.tasks.testing.logging.TestLogging.getShowExceptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setShowExceptions(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method boolean org.gradle.api.tasks.testing.logging.TestLogging.getShowStackTraces()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setShowStackTraces(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method boolean org.gradle.api.tasks.testing.logging.TestLogging.getShowStandardStreams()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method org.gradle.api.tasks.testing.logging.TestLogging org.gradle.api.tasks.testing.logging.TestLogging.setShowStandardStreams(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.logging.TestLogging.getStackTraceFilters()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setStackTraceFilters(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLogging",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLogging.setStackTraceFilters(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLoggingContainer.setDebug(org.gradle.api.tasks.testing.logging.TestLogging)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method org.gradle.api.tasks.testing.logging.TestLogging org.gradle.api.tasks.testing.logging.TestLoggingContainer.getDebug()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method org.gradle.api.tasks.testing.logging.TestLogging org.gradle.api.tasks.testing.logging.TestLoggingContainer.getError()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLoggingContainer.setError(org.gradle.api.tasks.testing.logging.TestLogging)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLoggingContainer.setInfo(org.gradle.api.tasks.testing.logging.TestLogging)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method org.gradle.api.tasks.testing.logging.TestLogging org.gradle.api.tasks.testing.logging.TestLoggingContainer.getInfo()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method org.gradle.api.tasks.testing.logging.TestLogging org.gradle.api.tasks.testing.logging.TestLoggingContainer.getLifecycle()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLoggingContainer.setLifecycle(org.gradle.api.tasks.testing.logging.TestLogging)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method org.gradle.api.tasks.testing.logging.TestLogging org.gradle.api.tasks.testing.logging.TestLoggingContainer.getQuiet()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLoggingContainer.setQuiet(org.gradle.api.tasks.testing.logging.TestLogging)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method org.gradle.api.tasks.testing.logging.TestLogging org.gradle.api.tasks.testing.logging.TestLoggingContainer.getWarn()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.logging.TestLoggingContainer",
            "member": "Method void org.gradle.api.tasks.testing.logging.TestLoggingContainer.setWarn(org.gradle.api.tasks.testing.logging.TestLogging)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.testing.testng.TestNGOptions.getConfigFailurePolicy()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setConfigFailurePolicy(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.testng.TestNGOptions.getExcludeGroups()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setExcludeGroups(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method boolean org.gradle.api.tasks.testing.testng.TestNGOptions.getGroupByInstances()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method boolean org.gradle.api.tasks.testing.testng.TestNGOptions.isGroupByInstances()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setGroupByInstances(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.testng.TestNGOptions.getIncludeGroups()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setIncludeGroups(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setListeners(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method java.util.Set org.gradle.api.tasks.testing.testng.TestNGOptions.getListeners()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method java.io.File org.gradle.api.tasks.testing.testng.TestNGOptions.getOutputDirectory()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setOutputDirectory(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.testing.testng.TestNGOptions.getParallel()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setParallel(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method boolean org.gradle.api.tasks.testing.testng.TestNGOptions.getPreserveOrder()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method boolean org.gradle.api.tasks.testing.testng.TestNGOptions.isPreserveOrder()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setPreserveOrder(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.testing.testng.TestNGOptions.getSuiteName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setSuiteName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method groovy.xml.MarkupBuilder org.gradle.api.tasks.testing.testng.TestNGOptions.getSuiteXmlBuilder()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setSuiteXmlBuilder(groovy.xml.MarkupBuilder)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method java.util.List org.gradle.api.tasks.testing.testng.TestNGOptions.getSuiteXmlFiles()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setSuiteXmlFiles(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method java.io.StringWriter org.gradle.api.tasks.testing.testng.TestNGOptions.getSuiteXmlWriter()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setSuiteXmlWriter(java.io.StringWriter)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method java.lang.String org.gradle.api.tasks.testing.testng.TestNGOptions.getTestName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setTestName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method int org.gradle.api.tasks.testing.testng.TestNGOptions.getThreadCount()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setThreadCount(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method boolean org.gradle.api.tasks.testing.testng.TestNGOptions.getUseDefaultListeners()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method boolean org.gradle.api.tasks.testing.testng.TestNGOptions.isUseDefaultListeners()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.testng.TestNGOptions",
            "member": "Method void org.gradle.api.tasks.testing.testng.TestNGOptions.setUseDefaultListeners(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method org.gradle.api.tasks.wrapper.Wrapper$PathBase org.gradle.api.tasks.wrapper.Wrapper.getArchiveBase()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setArchiveBase(org.gradle.api.tasks.wrapper.Wrapper$PathBase)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setArchivePath(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method java.lang.String org.gradle.api.tasks.wrapper.Wrapper.getArchivePath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method java.io.File org.gradle.api.tasks.wrapper.Wrapper.getBatchScript()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method org.gradle.api.tasks.wrapper.Wrapper$PathBase org.gradle.api.tasks.wrapper.Wrapper.getDistributionBase()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setDistributionBase(org.gradle.api.tasks.wrapper.Wrapper$PathBase)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method java.lang.String org.gradle.api.tasks.wrapper.Wrapper.getDistributionPath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setDistributionPath(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method java.lang.String org.gradle.api.tasks.wrapper.Wrapper.getDistributionSha256Sum()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setDistributionSha256Sum(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method org.gradle.api.tasks.wrapper.Wrapper$DistributionType org.gradle.api.tasks.wrapper.Wrapper.getDistributionType()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setDistributionType(org.gradle.api.tasks.wrapper.Wrapper$DistributionType)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method java.lang.String org.gradle.api.tasks.wrapper.Wrapper.getDistributionUrl()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setDistributionUrl(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setGradleVersion(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method java.lang.String org.gradle.api.tasks.wrapper.Wrapper.getGradleVersion()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setJarFile(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setJarFile(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method java.io.File org.gradle.api.tasks.wrapper.Wrapper.getJarFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method java.io.File org.gradle.api.tasks.wrapper.Wrapper.getPropertiesFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setScriptFile(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method void org.gradle.api.tasks.wrapper.Wrapper.setScriptFile(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method java.io.File org.gradle.api.tasks.wrapper.Wrapper.getScriptFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.buildinit.tasks.InitBuild",
            "member": "Method java.lang.String org.gradle.buildinit.tasks.InitBuild.getDsl()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.buildinit.tasks.InitBuild",
            "member": "Method void org.gradle.buildinit.tasks.InitBuild.setDsl(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.buildinit.tasks.InitBuild",
            "member": "Method void org.gradle.buildinit.tasks.InitBuild.setPackageName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.buildinit.tasks.InitBuild",
            "member": "Method java.lang.String org.gradle.buildinit.tasks.InitBuild.getPackageName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.buildinit.tasks.InitBuild",
            "member": "Method void org.gradle.buildinit.tasks.InitBuild.setProjectName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.buildinit.tasks.InitBuild",
            "member": "Method java.lang.String org.gradle.buildinit.tasks.InitBuild.getProjectName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.buildinit.tasks.InitBuild",
            "member": "Method java.lang.String org.gradle.buildinit.tasks.InitBuild.getTestFramework()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.buildinit.tasks.InitBuild",
            "member": "Method void org.gradle.buildinit.tasks.InitBuild.setTestFramework(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.buildinit.tasks.InitBuild",
            "member": "Method void org.gradle.buildinit.tasks.InitBuild.setType(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.buildinit.tasks.InitBuild",
            "member": "Method java.lang.String org.gradle.buildinit.tasks.InitBuild.getType()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.CoreJavadocOptions.getBootClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setBootClasspath(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.CoreJavadocOptions.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setClasspath(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.CoreJavadocOptions.getDoclet()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setDoclet(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.CoreJavadocOptions.getDocletpath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setDocletpath(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setEncoding(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.CoreJavadocOptions.getEncoding()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.CoreJavadocOptions.getExtDirs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setExtDirs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setJFlags(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.CoreJavadocOptions.getJFlags()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.CoreJavadocOptions.getLocale()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setLocale(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method org.gradle.external.javadoc.JavadocMemberLevel org.gradle.external.javadoc.CoreJavadocOptions.getMemberLevel()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setMemberLevel(org.gradle.external.javadoc.JavadocMemberLevel)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.CoreJavadocOptions.getModulePath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setModulePath(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.CoreJavadocOptions.getOptionFiles()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setOptionFiles(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method org.gradle.external.javadoc.JavadocOutputLevel org.gradle.external.javadoc.CoreJavadocOptions.getOutputLevel()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setOutputLevel(org.gradle.external.javadoc.JavadocOutputLevel)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.CoreJavadocOptions.getOverview()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setOverview(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.CoreJavadocOptions.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setSource(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.CoreJavadocOptions.getSourceNames()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setSourceNames(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method boolean org.gradle.external.javadoc.CoreJavadocOptions.isBreakIterator()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.CoreJavadocOptions.setBreakIterator(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.CoreJavadocOptions",
            "member": "Method boolean org.gradle.external.javadoc.CoreJavadocOptions.isVerbose()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.MinimalJavadocOptions.getBootClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setBootClasspath(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.MinimalJavadocOptions.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setClasspath(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setDestinationDirectory(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.io.File org.gradle.external.javadoc.MinimalJavadocOptions.getDestinationDirectory()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.MinimalJavadocOptions.getDoclet()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setDoclet(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.MinimalJavadocOptions.getDocletpath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setDocletpath(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setEncoding(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.MinimalJavadocOptions.getEncoding()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.MinimalJavadocOptions.getExtDirs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setExtDirs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setHeader(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.MinimalJavadocOptions.getHeader()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setJFlags(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.MinimalJavadocOptions.getJFlags()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.MinimalJavadocOptions.getLocale()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setLocale(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method org.gradle.external.javadoc.JavadocMemberLevel org.gradle.external.javadoc.MinimalJavadocOptions.getMemberLevel()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setMemberLevel(org.gradle.external.javadoc.JavadocMemberLevel)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.MinimalJavadocOptions.getModulePath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setModulePath(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.MinimalJavadocOptions.getOptionFiles()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setOptionFiles(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method org.gradle.external.javadoc.JavadocOutputLevel org.gradle.external.javadoc.MinimalJavadocOptions.getOutputLevel()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setOutputLevel(org.gradle.external.javadoc.JavadocOutputLevel)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.MinimalJavadocOptions.getOverview()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setOverview(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.MinimalJavadocOptions.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setSource(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.MinimalJavadocOptions.getSourceNames()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setSourceNames(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.MinimalJavadocOptions.getWindowTitle()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setWindowTitle(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method boolean org.gradle.external.javadoc.MinimalJavadocOptions.isBreakIterator()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method void org.gradle.external.javadoc.MinimalJavadocOptions.setBreakIterator(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.MinimalJavadocOptions",
            "member": "Method boolean org.gradle.external.javadoc.MinimalJavadocOptions.isVerbose()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.StandardJavadocDocletOptions.getBottom()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setBottom(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.StandardJavadocDocletOptions.getCharSet()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setCharSet(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setDestinationDirectory(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.io.File org.gradle.external.javadoc.StandardJavadocDocletOptions.getDestinationDirectory()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.StandardJavadocDocletOptions.getDocEncoding()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setDocEncoding(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.StandardJavadocDocletOptions.getDocTitle()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setDocTitle(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.StandardJavadocDocletOptions.getExcludeDocFilesSubDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setExcludeDocFilesSubDir(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.StandardJavadocDocletOptions.getFooter()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setFooter(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setGroups(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.util.Map org.gradle.external.javadoc.StandardJavadocDocletOptions.getGroups()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setHeader(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.StandardJavadocDocletOptions.getHeader()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.io.File org.gradle.external.javadoc.StandardJavadocDocletOptions.getHelpFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setHelpFile(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setLinks(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.StandardJavadocDocletOptions.getLinks()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.StandardJavadocDocletOptions.getLinksOffline()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setLinksOffline(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.StandardJavadocDocletOptions.getNoQualifiers()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setNoQualifiers(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.io.File org.gradle.external.javadoc.StandardJavadocDocletOptions.getStylesheetFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setStylesheetFile(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.StandardJavadocDocletOptions.getTagletPath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setTagletPath(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.StandardJavadocDocletOptions.getTaglets()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setTaglets(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.util.List org.gradle.external.javadoc.StandardJavadocDocletOptions.getTags()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setTags(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method java.lang.String org.gradle.external.javadoc.StandardJavadocDocletOptions.getWindowTitle()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setWindowTitle(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isAuthor()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setAuthor(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isDocFilesSubDirs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setDocFilesSubDirs(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isKeyWords()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setKeyWords(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isLinkSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setLinkSource(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isNoComment()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setNoComment(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isNoHelp()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setNoHelp(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isNoIndex()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setNoIndex(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isNoNavBar()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setNoNavBar(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isNoSince()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setNoSince(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isNoTimestamp()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setNoTimestamp(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isNoTree()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setNoTree(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isSerialWarn()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setSerialWarn(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isSplitIndex()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setSplitIndex(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isUse()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setUse(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method void org.gradle.external.javadoc.StandardJavadocDocletOptions.setVersion(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.external.javadoc.StandardJavadocDocletOptions",
            "member": "Method boolean org.gradle.external.javadoc.StandardJavadocDocletOptions.isVersion()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method void org.gradle.jvm.application.tasks.CreateStartScripts.setApplicationName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method java.lang.String org.gradle.jvm.application.tasks.CreateStartScripts.getApplicationName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.jvm.application.tasks.CreateStartScripts.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method void org.gradle.jvm.application.tasks.CreateStartScripts.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method java.lang.Iterable org.gradle.jvm.application.tasks.CreateStartScripts.getDefaultJvmOpts()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method void org.gradle.jvm.application.tasks.CreateStartScripts.setDefaultJvmOpts(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method void org.gradle.jvm.application.tasks.CreateStartScripts.setExecutableDir(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method java.lang.String org.gradle.jvm.application.tasks.CreateStartScripts.getExecutableDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method java.lang.String org.gradle.jvm.application.tasks.CreateStartScripts.getExitEnvironmentVar()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method void org.gradle.jvm.application.tasks.CreateStartScripts.setExitEnvironmentVar(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method java.lang.String org.gradle.jvm.application.tasks.CreateStartScripts.getOptsEnvironmentVar()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method void org.gradle.jvm.application.tasks.CreateStartScripts.setOptsEnvironmentVar(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method java.io.File org.gradle.jvm.application.tasks.CreateStartScripts.getOutputDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method void org.gradle.jvm.application.tasks.CreateStartScripts.setOutputDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method java.io.File org.gradle.jvm.application.tasks.CreateStartScripts.getUnixScript()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method org.gradle.jvm.application.scripts.ScriptGenerator org.gradle.jvm.application.tasks.CreateStartScripts.getUnixStartScriptGenerator()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method void org.gradle.jvm.application.tasks.CreateStartScripts.setUnixStartScriptGenerator(org.gradle.jvm.application.scripts.ScriptGenerator)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method java.io.File org.gradle.jvm.application.tasks.CreateStartScripts.getWindowsScript()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method org.gradle.jvm.application.scripts.ScriptGenerator org.gradle.jvm.application.tasks.CreateStartScripts.getWindowsStartScriptGenerator()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method void org.gradle.jvm.application.tasks.CreateStartScripts.setWindowsStartScriptGenerator(org.gradle.jvm.application.scripts.ScriptGenerator)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.tasks.Jar",
            "member": "Method void org.gradle.jvm.tasks.Jar.setManifest(org.gradle.api.java.archives.Manifest)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.tasks.Jar",
            "member": "Method org.gradle.api.java.archives.Manifest org.gradle.jvm.tasks.Jar.getManifest()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.tasks.Jar",
            "member": "Method java.lang.String org.gradle.jvm.tasks.Jar.getManifestContentCharset()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.tasks.Jar",
            "member": "Method void org.gradle.jvm.tasks.Jar.setManifestContentCharset(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.tasks.Jar",
            "member": "Method void org.gradle.jvm.tasks.Jar.setMetadataCharset(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.jvm.tasks.Jar",
            "member": "Method java.lang.String org.gradle.jvm.tasks.Jar.getMetadataCharset()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.assembler.tasks.Assemble",
            "member": "Method java.util.List org.gradle.language.assembler.tasks.Assemble.getAssemblerArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.assembler.tasks.Assemble",
            "member": "Method void org.gradle.language.assembler.tasks.Assemble.setAssemblerArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.assembler.tasks.Assemble",
            "member": "Method void org.gradle.language.assembler.tasks.Assemble.setObjectFileDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.assembler.tasks.Assemble",
            "member": "Method java.io.File org.gradle.language.assembler.tasks.Assemble.getObjectFileDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method void org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.setMacros(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method java.util.Map org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.getMacros()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method boolean org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.isDebuggable()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method void org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.setDebuggable(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method boolean org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.isOptimized()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method void org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.setOptimized(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method boolean org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.isPositionIndependentCode()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method void org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.setPositionIndependentCode(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeSourceCompileTask",
            "member": "Method org.gradle.nativeplatform.toolchain.internal.PreCompiledHeader org.gradle.language.nativeplatform.tasks.AbstractNativeSourceCompileTask.getPreCompiledHeader()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeSourceCompileTask",
            "member": "Method void org.gradle.language.nativeplatform.tasks.AbstractNativeSourceCompileTask.setPreCompiledHeader(org.gradle.nativeplatform.toolchain.internal.PreCompiledHeader)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.rc.tasks.WindowsResourceCompile",
            "member": "Method void org.gradle.language.rc.tasks.WindowsResourceCompile.setMacros(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.rc.tasks.WindowsResourceCompile",
            "member": "Method java.util.Map org.gradle.language.rc.tasks.WindowsResourceCompile.getMacros()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.rc.tasks.WindowsResourceCompile",
            "member": "Method java.io.File org.gradle.language.rc.tasks.WindowsResourceCompile.getOutputDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.rc.tasks.WindowsResourceCompile",
            "member": "Method void org.gradle.language.rc.tasks.WindowsResourceCompile.setOutputDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.AbstractScalaCompile",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions org.gradle.language.scala.tasks.AbstractScalaCompile.getOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.AbstractScalaCompile",
            "member": "Method org.gradle.language.scala.tasks.BaseScalaCompileOptions org.gradle.language.scala.tasks.AbstractScalaCompile.getScalaCompileOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.AbstractScalaCompile",
            "member": "Method org.gradle.api.file.FileTree org.gradle.language.scala.tasks.AbstractScalaCompile.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method java.util.List org.gradle.language.scala.tasks.BaseScalaCompileOptions.getAdditionalParameters()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setAdditionalParameters(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method java.lang.String org.gradle.language.scala.tasks.BaseScalaCompileOptions.getDebugLevel()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setDebugLevel(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setEncoding(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method java.lang.String org.gradle.language.scala.tasks.BaseScalaCompileOptions.getEncoding()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setForkOptions(org.gradle.api.tasks.scala.ScalaForkOptions)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method org.gradle.api.tasks.scala.ScalaForkOptions org.gradle.language.scala.tasks.BaseScalaCompileOptions.getForkOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setIncrementalOptions(org.gradle.api.tasks.scala.IncrementalCompileOptions)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method org.gradle.api.tasks.scala.IncrementalCompileOptions org.gradle.language.scala.tasks.BaseScalaCompileOptions.getIncrementalOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method java.lang.String org.gradle.language.scala.tasks.BaseScalaCompileOptions.getLoggingLevel()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setLoggingLevel(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method java.util.List org.gradle.language.scala.tasks.BaseScalaCompileOptions.getLoggingPhases()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setLoggingPhases(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method boolean org.gradle.language.scala.tasks.BaseScalaCompileOptions.isDeprecation()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setDeprecation(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method boolean org.gradle.language.scala.tasks.BaseScalaCompileOptions.isFailOnError()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setFailOnError(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method boolean org.gradle.language.scala.tasks.BaseScalaCompileOptions.isForce()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setForce(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method boolean org.gradle.language.scala.tasks.BaseScalaCompileOptions.isListFiles()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setListFiles(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method boolean org.gradle.language.scala.tasks.BaseScalaCompileOptions.isOptimize()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setOptimize(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method boolean org.gradle.language.scala.tasks.BaseScalaCompileOptions.isUnchecked()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method void org.gradle.language.scala.tasks.BaseScalaCompileOptions.setUnchecked(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.swift.tasks.SwiftCompile",
            "member": "Method boolean org.gradle.language.swift.tasks.SwiftCompile.isDebuggable()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.swift.tasks.SwiftCompile",
            "member": "Method org.gradle.api.provider.Property org.gradle.language.swift.tasks.SwiftCompile.getDebuggable()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.swift.tasks.SwiftCompile",
            "member": "Method boolean org.gradle.language.swift.tasks.SwiftCompile.isOptimized()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.language.swift.tasks.SwiftCompile",
            "member": "Method org.gradle.api.provider.Property org.gradle.language.swift.tasks.SwiftCompile.getOptimized()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.AbstractLinkTask",
            "member": "Method boolean org.gradle.nativeplatform.tasks.AbstractLinkTask.isDebuggable()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.AbstractLinkTask",
            "member": "Method org.gradle.api.provider.Property org.gradle.nativeplatform.tasks.AbstractLinkTask.getDebuggable()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.CreateStaticLibrary",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.nativeplatform.tasks.CreateStaticLibrary.getSource()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.InstallExecutable",
            "member": "Method void org.gradle.nativeplatform.tasks.InstallExecutable.setLibs(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.InstallExecutable",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.nativeplatform.tasks.InstallExecutable.getLibs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.PrefixHeaderFileGenerateTask",
            "member": "Method void org.gradle.nativeplatform.tasks.PrefixHeaderFileGenerateTask.setHeader(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.PrefixHeaderFileGenerateTask",
            "member": "Method java.lang.String org.gradle.nativeplatform.tasks.PrefixHeaderFileGenerateTask.getHeader()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.PrefixHeaderFileGenerateTask",
            "member": "Method java.io.File org.gradle.nativeplatform.tasks.PrefixHeaderFileGenerateTask.getPrefixHeaderFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.PrefixHeaderFileGenerateTask",
            "member": "Method void org.gradle.nativeplatform.tasks.PrefixHeaderFileGenerateTask.setPrefixHeaderFile(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.cunit.tasks.GenerateCUnitLauncher",
            "member": "Method java.io.File org.gradle.nativeplatform.test.cunit.tasks.GenerateCUnitLauncher.getHeaderDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.cunit.tasks.GenerateCUnitLauncher",
            "member": "Method void org.gradle.nativeplatform.test.cunit.tasks.GenerateCUnitLauncher.setHeaderDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.cunit.tasks.GenerateCUnitLauncher",
            "member": "Method java.io.File org.gradle.nativeplatform.test.cunit.tasks.GenerateCUnitLauncher.getSourceDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.cunit.tasks.GenerateCUnitLauncher",
            "member": "Method void org.gradle.nativeplatform.test.cunit.tasks.GenerateCUnitLauncher.setSourceDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.tasks.RunTestExecutable",
            "member": "Method java.io.File org.gradle.nativeplatform.test.tasks.RunTestExecutable.getOutputDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.tasks.RunTestExecutable",
            "member": "Method void org.gradle.nativeplatform.test.tasks.RunTestExecutable.setOutputDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.tasks.RunTestExecutable",
            "member": "Method boolean org.gradle.nativeplatform.test.tasks.RunTestExecutable.getIgnoreFailures()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.tasks.RunTestExecutable",
            "member": "Method boolean org.gradle.nativeplatform.test.tasks.RunTestExecutable.isIgnoreFailures()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.tasks.RunTestExecutable",
            "member": "Method void org.gradle.nativeplatform.test.tasks.RunTestExecutable.setIgnoreFailures(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.GradlePluginDevelopmentExtension",
            "member": "Method boolean org.gradle.plugin.devel.GradlePluginDevelopmentExtension.isAutomatedPublishing()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.GradlePluginDevelopmentExtension",
            "member": "Method void org.gradle.plugin.devel.GradlePluginDevelopmentExtension.setAutomatedPublishing(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.PluginDeclaration",
            "member": "Method void org.gradle.plugin.devel.PluginDeclaration.setDescription(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.PluginDeclaration",
            "member": "Method java.lang.String org.gradle.plugin.devel.PluginDeclaration.getDescription()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.PluginDeclaration",
            "member": "Method void org.gradle.plugin.devel.PluginDeclaration.setDisplayName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.PluginDeclaration",
            "member": "Method java.lang.String org.gradle.plugin.devel.PluginDeclaration.getDisplayName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.PluginDeclaration",
            "member": "Method void org.gradle.plugin.devel.PluginDeclaration.setId(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.PluginDeclaration",
            "member": "Method java.lang.String org.gradle.plugin.devel.PluginDeclaration.getId()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.PluginDeclaration",
            "member": "Method void org.gradle.plugin.devel.PluginDeclaration.setImplementationClass(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.PluginDeclaration",
            "member": "Method java.lang.String org.gradle.plugin.devel.PluginDeclaration.getImplementationClass()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.Ear",
            "member": "Method org.gradle.plugins.ear.descriptor.DeploymentDescriptor org.gradle.plugins.ear.Ear.getDeploymentDescriptor()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.Ear",
            "member": "Method void org.gradle.plugins.ear.Ear.setDeploymentDescriptor(org.gradle.plugins.ear.descriptor.DeploymentDescriptor)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.Ear",
            "member": "Method java.lang.String org.gradle.plugins.ear.Ear.getLibDirName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.Ear",
            "member": "Method void org.gradle.plugins.ear.Ear.setLibDirName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method void org.gradle.plugins.ear.descriptor.DeploymentDescriptor.setApplicationName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method java.lang.String org.gradle.plugins.ear.descriptor.DeploymentDescriptor.getApplicationName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method void org.gradle.plugins.ear.descriptor.DeploymentDescriptor.setDescription(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method java.lang.String org.gradle.plugins.ear.descriptor.DeploymentDescriptor.getDescription()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method void org.gradle.plugins.ear.descriptor.DeploymentDescriptor.setFileName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method java.lang.String org.gradle.plugins.ear.descriptor.DeploymentDescriptor.getFileName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method java.lang.Boolean org.gradle.plugins.ear.descriptor.DeploymentDescriptor.getInitializeInOrder()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method void org.gradle.plugins.ear.descriptor.DeploymentDescriptor.setInitializeInOrder(java.lang.Boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method java.lang.String org.gradle.plugins.ear.descriptor.DeploymentDescriptor.getLibraryDirectory()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method void org.gradle.plugins.ear.descriptor.DeploymentDescriptor.setLibraryDirectory(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method void org.gradle.plugins.ear.descriptor.DeploymentDescriptor.setModules(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method java.util.Set org.gradle.plugins.ear.descriptor.DeploymentDescriptor.getModules()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method java.util.Map org.gradle.plugins.ear.descriptor.DeploymentDescriptor.getModuleTypeMappings()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method void org.gradle.plugins.ear.descriptor.DeploymentDescriptor.setModuleTypeMappings(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method java.util.Set org.gradle.plugins.ear.descriptor.DeploymentDescriptor.getSecurityRoles()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method void org.gradle.plugins.ear.descriptor.DeploymentDescriptor.setSecurityRoles(java.util.Set)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method void org.gradle.plugins.ear.descriptor.DeploymentDescriptor.setVersion(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.DeploymentDescriptor",
            "member": "Method java.lang.String org.gradle.plugins.ear.descriptor.DeploymentDescriptor.getVersion()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.EarModule",
            "member": "Method java.lang.String org.gradle.plugins.ear.descriptor.EarModule.getAltDeployDescriptor()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.EarModule",
            "member": "Method void org.gradle.plugins.ear.descriptor.EarModule.setAltDeployDescriptor(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.EarModule",
            "member": "Method void org.gradle.plugins.ear.descriptor.EarModule.setPath(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.EarModule",
            "member": "Method java.lang.String org.gradle.plugins.ear.descriptor.EarModule.getPath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.EarSecurityRole",
            "member": "Method void org.gradle.plugins.ear.descriptor.EarSecurityRole.setDescription(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.EarSecurityRole",
            "member": "Method java.lang.String org.gradle.plugins.ear.descriptor.EarSecurityRole.getDescription()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.EarSecurityRole",
            "member": "Method java.lang.String org.gradle.plugins.ear.descriptor.EarSecurityRole.getRoleName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.EarSecurityRole",
            "member": "Method void org.gradle.plugins.ear.descriptor.EarSecurityRole.setRoleName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.EarWebModule",
            "member": "Method java.lang.String org.gradle.plugins.ear.descriptor.EarWebModule.getContextRoot()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.descriptor.EarWebModule",
            "member": "Method void org.gradle.plugins.ear.descriptor.EarWebModule.setContextRoot(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Sign",
            "member": "Method org.gradle.plugins.signing.signatory.Signatory org.gradle.plugins.signing.Sign.getSignatory()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Sign",
            "member": "Method void org.gradle.plugins.signing.Sign.setSignatory(org.gradle.plugins.signing.signatory.Signatory)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Sign",
            "member": "Method org.gradle.plugins.signing.type.SignatureType org.gradle.plugins.signing.Sign.getSignatureType()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Sign",
            "member": "Method void org.gradle.plugins.signing.Sign.setSignatureType(org.gradle.plugins.signing.type.SignatureType)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Sign",
            "member": "Method boolean org.gradle.plugins.signing.Sign.getRequired()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Sign",
            "member": "Method void org.gradle.plugins.signing.Sign.setRequired(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Sign",
            "member": "Method boolean org.gradle.plugins.signing.Sign.isRequired()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Signature",
            "member": "Method void org.gradle.plugins.signing.Signature.setClassifier(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Signature",
            "member": "Method java.lang.String org.gradle.plugins.signing.Signature.getClassifier()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Signature",
            "member": "Method java.util.Date org.gradle.plugins.signing.Signature.getDate()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Signature",
            "member": "Method void org.gradle.plugins.signing.Signature.setDate(java.util.Date)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Signature",
            "member": "Method java.lang.String org.gradle.plugins.signing.Signature.getExtension()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Signature",
            "member": "Method void org.gradle.plugins.signing.Signature.setExtension(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Signature",
            "member": "Method java.lang.String org.gradle.plugins.signing.Signature.getName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Signature",
            "member": "Method void org.gradle.plugins.signing.Signature.setName(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Signature",
            "member": "Method java.io.File org.gradle.plugins.signing.Signature.getToSign()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Signature",
            "member": "Method void org.gradle.plugins.signing.Signature.setType(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Signature",
            "member": "Method java.lang.String org.gradle.plugins.signing.Signature.getType()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SignatureSpec",
            "member": "Method org.gradle.plugins.signing.signatory.Signatory org.gradle.plugins.signing.SignatureSpec.getSignatory()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SignatureSpec",
            "member": "Method void org.gradle.plugins.signing.SignatureSpec.setSignatory(org.gradle.plugins.signing.signatory.Signatory)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SignatureSpec",
            "member": "Method org.gradle.plugins.signing.type.SignatureType org.gradle.plugins.signing.SignatureSpec.getSignatureType()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SignatureSpec",
            "member": "Method void org.gradle.plugins.signing.SignatureSpec.setSignatureType(org.gradle.plugins.signing.type.SignatureType)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SignatureSpec",
            "member": "Method void org.gradle.plugins.signing.SignatureSpec.setRequired(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SignatureSpec",
            "member": "Method boolean org.gradle.plugins.signing.SignatureSpec.isRequired()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SigningExtension",
            "member": "Method void org.gradle.plugins.signing.SigningExtension.setRequired(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SigningExtension",
            "member": "Method void org.gradle.plugins.signing.SigningExtension.setRequired(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SigningExtension",
            "member": "Method boolean org.gradle.plugins.signing.SigningExtension.isRequired()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.BaseExecSpec",
            "member": "Method org.gradle.process.BaseExecSpec org.gradle.process.BaseExecSpec.setIgnoreExitValue(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.BaseExecSpec",
            "member": "Method boolean org.gradle.process.BaseExecSpec.isIgnoreExitValue()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ExecSpec",
            "member": "Method org.gradle.process.ExecSpec org.gradle.process.ExecSpec.setArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ExecSpec",
            "member": "Method org.gradle.process.ExecSpec org.gradle.process.ExecSpec.setArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ExecSpec",
            "member": "Method java.util.List org.gradle.process.ExecSpec.getArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ExecSpec",
            "member": "Method java.util.List org.gradle.process.ExecSpec.getArgumentProviders()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaExecSpec",
            "member": "Method org.gradle.process.JavaExecSpec org.gradle.process.JavaExecSpec.setArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaExecSpec",
            "member": "Method org.gradle.process.JavaExecSpec org.gradle.process.JavaExecSpec.setArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaExecSpec",
            "member": "Method java.util.List org.gradle.process.JavaExecSpec.getArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaExecSpec",
            "member": "Method java.util.List org.gradle.process.JavaExecSpec.getArgumentProviders()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaExecSpec",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.process.JavaExecSpec.getClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaExecSpec",
            "member": "Method org.gradle.process.JavaExecSpec org.gradle.process.JavaExecSpec.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaExecSpec",
            "member": "Method org.gradle.api.jvm.ModularitySpec org.gradle.process.JavaExecSpec.getModularity()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method java.util.List org.gradle.process.JavaForkOptions.getAllJvmArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method void org.gradle.process.JavaForkOptions.setAllJvmArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method void org.gradle.process.JavaForkOptions.setAllJvmArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.process.JavaForkOptions.getBootstrapClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method void org.gradle.process.JavaForkOptions.setBootstrapClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method void org.gradle.process.JavaForkOptions.setDebug(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method boolean org.gradle.process.JavaForkOptions.getDebug()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method org.gradle.process.JavaDebugOptions org.gradle.process.JavaForkOptions.getDebugOptions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method java.lang.String org.gradle.process.JavaForkOptions.getDefaultCharacterEncoding()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method void org.gradle.process.JavaForkOptions.setDefaultCharacterEncoding(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method boolean org.gradle.process.JavaForkOptions.getEnableAssertions()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method void org.gradle.process.JavaForkOptions.setEnableAssertions(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method java.util.List org.gradle.process.JavaForkOptions.getJvmArgs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method void org.gradle.process.JavaForkOptions.setJvmArgs(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method void org.gradle.process.JavaForkOptions.setJvmArgs(java.lang.Iterable)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method java.util.List org.gradle.process.JavaForkOptions.getJvmArgumentProviders()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method java.lang.String org.gradle.process.JavaForkOptions.getMaxHeapSize()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method void org.gradle.process.JavaForkOptions.setMaxHeapSize(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method java.lang.String org.gradle.process.JavaForkOptions.getMinHeapSize()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method void org.gradle.process.JavaForkOptions.setMinHeapSize(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method void org.gradle.process.JavaForkOptions.setSystemProperties(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method java.util.Map org.gradle.process.JavaForkOptions.getSystemProperties()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ProcessForkOptions",
            "member": "Method void org.gradle.process.ProcessForkOptions.setEnvironment(java.util.Map)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ProcessForkOptions",
            "member": "Method java.util.Map org.gradle.process.ProcessForkOptions.getEnvironment()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ProcessForkOptions",
            "member": "Method void org.gradle.process.ProcessForkOptions.setExecutable(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ProcessForkOptions",
            "member": "Method void org.gradle.process.ProcessForkOptions.setExecutable(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ProcessForkOptions",
            "member": "Method java.lang.String org.gradle.process.ProcessForkOptions.getExecutable()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ProcessForkOptions",
            "member": "Method java.io.File org.gradle.process.ProcessForkOptions.getWorkingDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ProcessForkOptions",
            "member": "Method void org.gradle.process.ProcessForkOptions.setWorkingDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.process.ProcessForkOptions",
            "member": "Method void org.gradle.process.ProcessForkOptions.setWorkingDir(java.lang.Object)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoPluginExtension",
            "member": "Method java.lang.String org.gradle.testing.jacoco.plugins.JacocoPluginExtension.getToolVersion()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoPluginExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoPluginExtension.setToolVersion(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setAddress(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method java.lang.String org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getAddress()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method java.io.File org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getClassDumpDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setClassDumpDir(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setDestinationFile(org.gradle.api.provider.Provider)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setDestinationFile(java.io.File)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method java.io.File org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getDestinationFile()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method java.util.List org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getExcludeClassLoaders()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setExcludeClassLoaders(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setExcludes(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method java.util.List org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getExcludes()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setIncludes(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method java.util.List org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getIncludes()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method org.gradle.testing.jacoco.plugins.JacocoTaskExtension$Output org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getOutput()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setOutput(org.gradle.testing.jacoco.plugins.JacocoTaskExtension$Output)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setPort(int)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method int org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getPort()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method java.lang.String org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getSessionId()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setSessionId(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method boolean org.gradle.testing.jacoco.plugins.JacocoTaskExtension.isDumpOnExit()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setDumpOnExit(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method boolean org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getDumpOnExit()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method boolean org.gradle.testing.jacoco.plugins.JacocoTaskExtension.isEnabled()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setEnabled(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method boolean org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getEnabled()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method boolean org.gradle.testing.jacoco.plugins.JacocoTaskExtension.isIncludeNoLocationClasses()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setIncludeNoLocationClasses(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method boolean org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getIncludeNoLocationClasses()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method boolean org.gradle.testing.jacoco.plugins.JacocoTaskExtension.isJmx()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method void org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setJmx(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method boolean org.gradle.testing.jacoco.plugins.JacocoTaskExtension.getJmx()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.JacocoBase",
            "member": "Method org.gradle.api.file.FileCollection org.gradle.testing.jacoco.tasks.JacocoBase.getJacocoClasspath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.JacocoBase",
            "member": "Method void org.gradle.testing.jacoco.tasks.JacocoBase.setJacocoClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoLimit",
            "member": "Method java.lang.String org.gradle.testing.jacoco.tasks.rules.JacocoLimit.getCounter()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoLimit",
            "member": "Method void org.gradle.testing.jacoco.tasks.rules.JacocoLimit.setCounter(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoLimit",
            "member": "Method void org.gradle.testing.jacoco.tasks.rules.JacocoLimit.setMaximum(java.math.BigDecimal)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoLimit",
            "member": "Method java.math.BigDecimal org.gradle.testing.jacoco.tasks.rules.JacocoLimit.getMaximum()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoLimit",
            "member": "Method void org.gradle.testing.jacoco.tasks.rules.JacocoLimit.setMinimum(java.math.BigDecimal)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoLimit",
            "member": "Method java.math.BigDecimal org.gradle.testing.jacoco.tasks.rules.JacocoLimit.getMinimum()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoLimit",
            "member": "Method java.lang.String org.gradle.testing.jacoco.tasks.rules.JacocoLimit.getValue()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoLimit",
            "member": "Method void org.gradle.testing.jacoco.tasks.rules.JacocoLimit.setValue(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule",
            "member": "Method java.lang.String org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule.getElement()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule",
            "member": "Method void org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule.setElement(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule",
            "member": "Method void org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule.setExcludes(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule",
            "member": "Method java.util.List org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule.getExcludes()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule",
            "member": "Method void org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule.setIncludes(java.util.List)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule",
            "member": "Method java.util.List org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule.getIncludes()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule",
            "member": "Method java.util.List org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule.getLimits()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule",
            "member": "Method boolean org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule.isEnabled()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule",
            "member": "Method void org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule.setEnabled(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRulesContainer",
            "member": "Method java.util.List org.gradle.testing.jacoco.tasks.rules.JacocoViolationRulesContainer.getRules()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRulesContainer",
            "member": "Method void org.gradle.testing.jacoco.tasks.rules.JacocoViolationRulesContainer.setFailOnViolation(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.rules.JacocoViolationRulesContainer",
            "member": "Method boolean org.gradle.testing.jacoco.tasks.rules.JacocoViolationRulesContainer.isFailOnViolation()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.vcs.VersionControlRepository",
            "member": "Method java.lang.String org.gradle.vcs.VersionControlRepository.getRootDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.vcs.VersionControlRepository",
            "member": "Method void org.gradle.vcs.VersionControlRepository.setRootDir(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.vcs.VersionControlSpec",
            "member": "Method java.lang.String org.gradle.vcs.VersionControlSpec.getRepoName()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.vcs.VersionControlSpec",
            "member": "Method java.lang.String org.gradle.vcs.VersionControlSpec.getRootDir()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.vcs.VersionControlSpec",
            "member": "Method void org.gradle.vcs.VersionControlSpec.setRootDir(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.vcs.git.GitVersionControlSpec",
            "member": "Method java.net.URI org.gradle.vcs.git.GitVersionControlSpec.getUrl()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.vcs.git.GitVersionControlSpec",
            "member": "Method void org.gradle.vcs.git.GitVersionControlSpec.setUrl(java.net.URI)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        },
        {
            "type": "org.gradle.vcs.git.GitVersionControlSpec",
            "member": "Method void org.gradle.vcs.git.GitVersionControlSpec.setUrl(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been upgraded"
            ]
        }
    ]
}
